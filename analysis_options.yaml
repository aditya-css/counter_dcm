# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:dart_code_metrics_presets/all.yaml

dart_code_metrics:
  monorepo: true
  extends:
    - recommended
  metrics:
    cyclomatic-complexity: 20
    number-of-parameters: 4
    maximum-nesting-level: 5
    weight-of-class: 0.33
    tight-class-cohesion: 0.33
    weighted-methods-per-class: 35
    response-for-class: 55
    coupling-between-object-classes: 12
    number-of-added-methods: 10
    depth-of-inheritance-tree: 5
    widgets-nesting-level: 10
    source-lines-of-code: 50
    number-of-used-widgets: 20
    maintainability-index: 50
    lines-of-code: 100
    halstead-volume: 150
    technical-debt:
      threshold: 1
      todo-cost: 161
      ignore-cost: 320
      ignore-for-file-cost: 396
      as-dynamic-cost: 322
      deprecated-annotations-cost: 37
      file-nullsafety-migration-cost: 41
      unit-type: "INR"
